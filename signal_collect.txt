SumOfStates should sum all states correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
ProductOfStates should multiply all states correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
CountVertices should count the number of PageRank vertices correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
CountVertices should count the number of SudokuCell vertices correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
SampleVertexIds should sample 0 vertex ids correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
SampleVertexIds should sample 50 vertex ids correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
SampleVertexIds should sample 1000 vertex ids correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Graph should support the `loadGraph` command: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Graph should support using the `loadGraph` command after the loading phase: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Bulk signaling should deliver correct results on a 5-cycle graph: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Bulk signaling should handle a bulk size of 1 correctly: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
PageRank algorithm should deliver correct results on a 5-cycle graph: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
PageRank algorithm should deliver correct results on a 5-star graph: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
PageRank algorithm should deliver correct results on a 2*2 symmetric grid: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
PageRank algorithm should deliver correct results on a 5*5 torus: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
VertexColoring algorithm should deliver correct results on a symmetric 4-cycle: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
VertexColoring algorithm should deliver correct results on a symmetric 5-star: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
VertexColoring algorithm should deliver correct results on a 2*2 symmetric grid: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
SSSP algorithm should deliver correct results on a symmetric 4-cycle: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
SSSP algorithm should deliver correct results on a symmetric 5-star: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should log errors during vertex initialization: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
GraphEditor should support modification functions: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
GraphEditor should keep accurate statistics when using individual vertex removals: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Custom mapper should correctly support PageRank computation: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
AkkaProxy should invoke blocking methods: actors=1 | types=1 (com.signalcollect.AkkaProxySpec$CommandExecutor$1) 
Framework should call the beforeRemoval function of a vertex before removing it: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Graph.reset should reset the graph into a state similar to the one it had after Graph.build: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should terminate with a very low latency when an execution does nothing: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Eager convergence detection should not suffer from spurious idle detections: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Steps limit should work for synchronous computations: actors=200 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Global convergence should work for synchronous computations: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Global convergence should work for asynchronous computations: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Adding the same vertex multiple times should be ignored: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Adding the same vertex multiple times should support merges via handler: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Handler for adding an edge to a nonexistent vertex should correctly create vertices if needed: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should support multiple instances on the same actor system: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should support running on the same actor system with a shutdown in between: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should run on multiple actor systems inside the same JVM: actors=40 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Signal/Collect should support running multiple graph instances on the same actor system: actors=60 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
Snapshots should correctly store and load a small graph: actors=20 | types=4 (com.signalcollect.nodeprovisioning.cluster.ClusterNodeProvisionerActor,com.signalcollect.node.DefaultNodeActor,com.signalcollect.worker.AkkaWorker,com.signalcollect.coordinator.DefaultCoordinator) 
